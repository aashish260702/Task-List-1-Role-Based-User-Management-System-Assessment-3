@import 'variables';

// Button mixin
@mixin button-style($bg-color, $text-color: white, $hover-bg: darken($bg-color, 10%)) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: $border-radius;
  cursor: pointer;
  font-weight: $font-weight-normal;
  transition: all 0.3s ease;
  
  &:hover {
    background-color: $hover-bg;
    transform: translateY(-1px);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

// Form input mixin
@mixin form-input {
  width: 100%;
  padding: 0.75rem;
  border: $border-width solid $border-color;
  border-radius: $border-radius;
  font-size: $font-size-base;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
  
  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
  }
  
  &.error {
    border-color: $danger-color;
    
    &:focus {
      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }
  }
}

// Card mixin
@mixin card {
  background: white;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  padding: 1.5rem;
  margin-bottom: 1rem;
}

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// Flex center
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Grid layout
@mixin grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}
